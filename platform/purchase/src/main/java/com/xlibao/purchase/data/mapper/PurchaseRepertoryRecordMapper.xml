<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xlibao.purchase.data.mapper.PurchaseRepertoryRecordMapper">
  <resultMap id="BaseResultMap" type="com.xlibao.purchase.data.model.PurchaseRepertoryRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="purchase_id" jdbcType="BIGINT" property="purchaseId" />
    <result column="warehouse_code" jdbcType="VARCHAR" property="warehouseCode" />
    <result column="warehouse_name" jdbcType="VARCHAR" property="warehouseName" />
    <result column="item_id" jdbcType="BIGINT" property="itemId" />
    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
    <result column="barcode" jdbcType="VARCHAR" property="barcode" />
    <result column="record_type" jdbcType="INTEGER" property="recordType" />
    <result column="deposit_number" jdbcType="INTEGER" property="depositNumber" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
  </resultMap>
  <sql id="Base_Column_List">
    id, purchase_id, warehouse_code, warehouse_name, item_id, item_name, barcode, record_type, 
    deposit_number, update_time, create_time, is_delete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from purchase_repertory_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from purchase_repertory_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xlibao.purchase.data.model.PurchaseRepertoryRecord">
    insert into purchase_repertory_record (id, purchase_id, warehouse_code, 
      warehouse_name, item_id, item_name, 
      barcode, record_type, deposit_number, 
      update_time, create_time, is_delete
      )
    values (#{id,jdbcType=BIGINT}, #{purchaseId,jdbcType=BIGINT}, #{warehouseCode,jdbcType=VARCHAR}, 
      #{warehouseName,jdbcType=VARCHAR}, #{itemId,jdbcType=BIGINT}, #{itemName,jdbcType=VARCHAR}, 
      #{barcode,jdbcType=VARCHAR}, #{recordType,jdbcType=INTEGER}, #{depositNumber,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xlibao.purchase.data.model.PurchaseRepertoryRecord">
    insert into purchase_repertory_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="purchaseId != null">
        purchase_id,
      </if>
      <if test="warehouseCode != null">
        warehouse_code,
      </if>
      <if test="warehouseName != null">
        warehouse_name,
      </if>
      <if test="itemId != null">
        item_id,
      </if>
      <if test="itemName != null">
        item_name,
      </if>
      <if test="barcode != null">
        barcode,
      </if>
      <if test="recordType != null">
        record_type,
      </if>
      <if test="depositNumber != null">
        deposit_number,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="purchaseId != null">
        #{purchaseId,jdbcType=BIGINT},
      </if>
      <if test="warehouseCode != null">
        #{warehouseCode,jdbcType=VARCHAR},
      </if>
      <if test="warehouseName != null">
        #{warehouseName,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null">
        #{itemId,jdbcType=BIGINT},
      </if>
      <if test="itemName != null">
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="barcode != null">
        #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="recordType != null">
        #{recordType,jdbcType=INTEGER},
      </if>
      <if test="depositNumber != null">
        #{depositNumber,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xlibao.purchase.data.model.PurchaseRepertoryRecord">
    update purchase_repertory_record
    <set>
      <if test="purchaseId != null">
        purchase_id = #{purchaseId,jdbcType=BIGINT},
      </if>
      <if test="warehouseCode != null">
        warehouse_code = #{warehouseCode,jdbcType=VARCHAR},
      </if>
      <if test="warehouseName != null">
        warehouse_name = #{warehouseName,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null">
        item_id = #{itemId,jdbcType=BIGINT},
      </if>
      <if test="itemName != null">
        item_name = #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="barcode != null">
        barcode = #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="recordType != null">
        record_type = #{recordType,jdbcType=INTEGER},
      </if>
      <if test="depositNumber != null">
        deposit_number = #{depositNumber,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xlibao.purchase.data.model.PurchaseRepertoryRecord">
    update purchase_repertory_record
    set purchase_id = #{purchaseId,jdbcType=BIGINT},
      warehouse_code = #{warehouseCode,jdbcType=VARCHAR},
      warehouse_name = #{warehouseName,jdbcType=VARCHAR},
      item_id = #{itemId,jdbcType=BIGINT},
      item_name = #{itemName,jdbcType=VARCHAR},
      barcode = #{barcode,jdbcType=VARCHAR},
      record_type = #{recordType,jdbcType=INTEGER},
      deposit_number = #{depositNumber,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>