<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xlibao.purchase.data.mapper.PurchaseCommodityStoresMapper">
  <resultMap id="BaseResultMap" type="com.xlibao.purchase.data.model.PurchaseCommodityStores">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="warehouse_code" jdbcType="BIGINT" property="warehouseCode" />
    <result column="warehouse_name" jdbcType="VARCHAR" property="warehouseName" />
    <result column="item_type_id" jdbcType="BIGINT" property="itemTypeId" />
    <result column="item_type_name" jdbcType="VARCHAR" property="itemTypeName" />
    <result column="item_id" jdbcType="BIGINT" property="itemId" />
    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
    <result column="barcode" jdbcType="VARCHAR" property="barcode" />
    <result column="stores_number" jdbcType="INTEGER" property="storesNumber" />
    <result column="warn_number" jdbcType="INTEGER" property="warnNumber" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
  </resultMap>
  <sql id="Base_Column_List">
    id, warehouse_code, warehouse_name, item_type_id, item_type_name, item_id, item_name,
    barcode, stores_number, warn_number, update_time, create_time, is_delete
  </sql>

  <select id="searchCommodityStoresPage" resultMap="BaseResultMap">
    SELECT * FROM purchase_commodity_stores WHERE is_delete!=1
    <if test="warehouseCode!=null">
      AND warehouse_code = #{warehouseCode}
    </if>
    <if test="itemName!=null">
      AND item_name like "%"#{itemName}"%"
    </if>
    <if test="barcode!=null">
      AND barcode like "%"#{barcode}"%"
    </if>
    order by create_time desc limit #{pageStartIndex}, #{pageSize}
  </select>

  <select id="searchCommodityStoresPageCount" resultType="int">
    SELECT count(1) FROM purchase_commodity_stores WHERE is_delete!=1
    <if test="warehouseCode!=null">
      AND warehouse_code = #{warehouseCode}
    </if>
    <if test="itemName!=null">
      AND item_name like "%"#{itemName}"%"
    </if>
    <if test="barcode!=null">
      AND barcode =like "%"#{barcode}"%"
    </if>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from purchase_commodity_stores
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="getByParameterID" resultMap="BaseResultMap">
    select *   from purchase_commodity_stores
    WHERE is_delete!=1 and  warehouse_code = #{warehouseCode} and item_id = #{itemId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from purchase_commodity_stores
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xlibao.purchase.data.model.PurchaseCommodityStores">
    insert into purchase_commodity_stores (id, warehouse_code, warehouse_name,
    item_type_id, item_type_name, item_id,
    item_name, barcode, stores_number,
    warn_number, update_time, create_time,
    is_delete)
    values (#{id,jdbcType=BIGINT}, #{warehouseCode,jdbcType=VARCHAR}, #{warehouseName,jdbcType=VARCHAR},
    #{itemTypeId,jdbcType=BIGINT}, #{itemTypeName,jdbcType=VARCHAR}, #{itemId,jdbcType=BIGINT},
    #{itemName,jdbcType=VARCHAR}, #{barcode,jdbcType=VARCHAR}, #{storesNumber,jdbcType=INTEGER},
    #{warnNumber,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP},
    #{isDelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xlibao.purchase.data.model.PurchaseCommodityStores">
    insert into purchase_commodity_stores
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="warehouseCode != null">
        warehouse_code,
      </if>
      <if test="warehouseName != null">
        warehouse_name,
      </if>
      <if test="itemTypeId != null">
        item_type_id,
      </if>
      <if test="itemTypeName != null">
        item_type_name,
      </if>
      <if test="itemId != null">
        item_id,
      </if>
      <if test="itemName != null">
        item_name,
      </if>
      <if test="barcode != null">
        barcode,
      </if>
      <if test="storesNumber != null">
        stores_number,
      </if>
      <if test="warnNumber != null">
        warn_number,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="warehouseCode != null">
        #{warehouseCode,jdbcType=VARCHAR},
      </if>
      <if test="warehouseName != null">
        #{warehouseName,jdbcType=VARCHAR},
      </if>
      <if test="itemTypeId != null">
        #{itemTypeId,jdbcType=BIGINT},
      </if>
      <if test="itemTypeName != null">
        #{itemTypeName,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null">
        #{itemId,jdbcType=BIGINT},
      </if>
      <if test="itemName != null">
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="barcode != null">
        #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="storesNumber != null">
        #{storesNumber,jdbcType=INTEGER},
      </if>
      <if test="warnNumber != null">
        #{warnNumber,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xlibao.purchase.data.model.PurchaseCommodityStores">
    update purchase_commodity_stores
    <set>
      <if test="warehouseCode != null">
        warehouse_code = #{warehouseCode,jdbcType=VARCHAR},
      </if>
      <if test="warehouseName != null">
        warehouse_name = #{warehouseName,jdbcType=VARCHAR},
      </if>
      <if test="itemTypeId != null">
        item_type_id = #{itemTypeId,jdbcType=BIGINT},
      </if>
      <if test="itemTypeName != null">
        item_type_name = #{itemTypeName,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null">
        item_id = #{itemId,jdbcType=BIGINT},
      </if>
      <if test="itemName != null">
        item_name = #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="barcode != null">
        barcode = #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="storesNumber != null">
        stores_number = #{storesNumber,jdbcType=INTEGER},
      </if>
      <if test="warnNumber != null">
        warn_number = #{warnNumber,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xlibao.purchase.data.model.PurchaseCommodityStores">
    update purchase_commodity_stores
    set warehouse_code = #{warehouseCode,jdbcType=VARCHAR},
    warehouse_name = #{warehouseName,jdbcType=VARCHAR},
    item_type_id = #{itemTypeId,jdbcType=BIGINT},
    item_type_name = #{itemTypeName,jdbcType=VARCHAR},
    item_id = #{itemId,jdbcType=BIGINT},
    item_name = #{itemName,jdbcType=VARCHAR},
    barcode = #{barcode,jdbcType=VARCHAR},
    stores_number = #{storesNumber,jdbcType=INTEGER},
    warn_number = #{warnNumber,jdbcType=INTEGER},
    update_time = #{updateTime,jdbcType=TIMESTAMP},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    is_delete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>