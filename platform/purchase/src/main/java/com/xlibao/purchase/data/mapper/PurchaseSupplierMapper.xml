<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xlibao.purchase.data.mapper.PurchaseSupplierMapper">
  <resultMap id="BaseResultMap" type="com.xlibao.purchase.data.model.PurchaseSupplier">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="supplier_name" jdbcType="VARCHAR" property="supplierName" />
    <result column="abbreviation" jdbcType="VARCHAR" property="abbreviation" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="supplier_type" jdbcType="INTEGER" property="supplierType" />
    <result column="deliver_period" jdbcType="VARCHAR" property="deliverPeriod" />
    <result column="salesman_name" jdbcType="VARCHAR" property="salesmanName" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="stop_remark" jdbcType="VARCHAR" property="stopRemark" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
  </resultMap>
  <sql id="Base_Column_List">
    id, supplier_name, abbreviation, address, supplier_type, deliver_period, salesman_name,
    phone, status, stop_remark, remark, update_time, create_time, is_delete
  </sql>

  <select id="searchSupplierPage" resultMap="BaseResultMap">
    SELECT * FROM purchase_supplier WHERE is_delete!=1
    <if test="supplierName!=null">
      AND supplier_name LIKE "%"#{supplierName}"%"
    </if>
    <if test="supplierType!=-1">
      AND supplier_type = #{supplierType}
    </if>
    <if test="status!=-1">
      AND status = #{status}
    </if>
    order by create_time desc limit #{pageStartIndex}, #{pageSize}
  </select>
  <select id="getAllSupplier" resultMap="BaseResultMap">
    SELECT * FROM purchase_supplier WHERE is_delete!=1 AND status=1 order by create_time
  </select>

  <select id="searchSupplierPageCount" resultType="int">
    SELECT count(1) FROM purchase_supplier WHERE is_delete!=1
    <if test="supplierName!=null">
      AND supplier_name LIKE "%"#{supplierName}"%"
    </if>
    <if test="supplierType!=-1">
      AND supplier_type = #{supplierType}
    </if>
    <if test="status!=-1">
      AND status = #{status}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from purchase_supplier
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from purchase_supplier
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xlibao.purchase.data.model.PurchaseSupplier" useGeneratedKeys="true" keyProperty="id">
    insert into purchase_supplier ( supplier_name, abbreviation,
      address, supplier_type, deliver_period,
      salesman_name, phone, status,
      stop_remark, remark, update_time,
      create_time, is_delete)
    values ( #{supplierName,jdbcType=VARCHAR}, #{abbreviation,jdbcType=VARCHAR},
      #{address,jdbcType=VARCHAR}, #{supplierType,jdbcType=INTEGER}, #{deliverPeriod,jdbcType=VARCHAR},
      #{salesmanName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
      #{stopRemark,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xlibao.purchase.data.model.PurchaseSupplier" useGeneratedKeys="true" keyProperty="id">
    insert into purchase_supplier
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="supplierName != null">
        supplier_name,
      </if>
      <if test="abbreviation != null">
        abbreviation,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="supplierType != null">
        supplier_type,
      </if>
      <if test="deliverPeriod != null">
        deliver_period,
      </if>
      <if test="salesmanName != null">
        salesman_name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="stopRemark != null">
        stop_remark,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="supplierName != null">
        #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="abbreviation != null">
        #{abbreviation,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="supplierType != null">
        #{supplierType,jdbcType=INTEGER},
      </if>
      <if test="deliverPeriod != null">
        #{deliverPeriod,jdbcType=VARCHAR},
      </if>
      <if test="salesmanName != null">
        #{salesmanName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="stopRemark != null">
        #{stopRemark,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xlibao.purchase.data.model.PurchaseSupplier">
    update purchase_supplier
    <set>
      <if test="supplierName != null">
        supplier_name = #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="abbreviation != null">
        abbreviation = #{abbreviation,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="supplierType != null">
        supplier_type = #{supplierType,jdbcType=INTEGER},
      </if>
      <if test="deliverPeriod != null">
        deliver_period = #{deliverPeriod,jdbcType=VARCHAR},
      </if>
      <if test="salesmanName != null">
        salesman_name = #{salesmanName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="stopRemark != null">
        stop_remark = #{stopRemark,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xlibao.purchase.data.model.PurchaseSupplier">
    update purchase_supplier
    set supplier_name = #{supplierName,jdbcType=VARCHAR},
      abbreviation = #{abbreviation,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      supplier_type = #{supplierType,jdbcType=INTEGER},
      deliver_period = #{deliverPeriod,jdbcType=VARCHAR},
      salesman_name = #{salesmanName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      stop_remark = #{stopRemark,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>