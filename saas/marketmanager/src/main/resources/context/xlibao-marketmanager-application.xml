<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       	http://www.springframework.org/schema/beans/spring-beans.xsd
       	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd"
       default-lazy-init="true">

    <!-- 开启注解功能的自动注入 -->
    <context:annotation-config/>
    <aop:aspectj-autoproxy/>

    <!-- 加载指定环境下的配置文件 -->
    <context:property-placeholder location="classpath:properties/*/${profiles.active}*.properties"/>

    <!-- 自动扫描(自动注入) -->
    <context:component-scan base-package="com.xlibao.saas.market.manager">
        <!-- 排除Controller -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 处理静态资源的请求 -->
    <mvc:resources location="/assets/" mapping="/assets/**"/>

    <!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">-->
    <!--<property name="driverClassName" value="${jdbc.driverClass}"/>-->
    <!--<property name="url" value="${jdbc_url}"/>-->
    <!--<property name="username" value="${jdbc_user}"/>-->
    <!--<property name="password" value="${jdbc_password}"/>-->

    <!--<property name="filters" value="stat,log4j"/>-->

    <!--<property name="maxActive" value="30"/>-->
    <!--<property name="initialSize" value="1"/>-->
    <!--<property name="maxWait" value="10000"/>-->
    <!--<property name="minIdle" value="1"/>-->

    <!--<property name="timeBetweenEvictionRunsMillis" value="60000"/>-->
    <!--<property name="minEvictableIdleTimeMillis" value="300000"/>-->

    <!--<property name="validationQuery" value="SELECT 'x'"/>-->
    <!--<property name="testWhileIdle" value="true"/>-->
    <!--<property name="testOnBorrow" value="false"/>-->
    <!--<property name="testOnReturn" value="false"/>-->

    <!--<property name="removeAbandoned" value="true"/>-->
    <!--<property name="removeAbandonedTimeout" value="180"/>-->
    <!--&lt;!&ndash; 关闭abanded连接时输出错误日志 &ndash;&gt;-->
    <!--<property name="logAbandoned" value="true"/>-->

    <!--<property name="poolPreparedStatements" value="true"/>-->
    <!--<property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>-->
    <!--</bean>-->

    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
    <!--<property name="dataSource" ref="dataSource"/>-->
    <!--<property name="mapperLocations">-->
    <!--<array>-->
    <!--<value>classpath:/com/xlibao/saas/market/manager/data/mapper/*Mapper.xml</value>-->
    <!--</array>-->
    <!--</property>-->

    <!--<property name="typeAliasesPackage" value="com.xlibao.saas.market.manager.data.model.*"/>-->
    <!--</bean>-->

    <!--<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">-->
    <!--<property name="basePackage" value="com.xlibao.saas.market.manager.data.mapper"/>-->
    <!--</bean>-->

    <!--<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">-->
    <!--<constructor-arg index="0" ref="sqlSessionFactory"/>-->
    <!--</bean>-->

    <!--<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
    <!--<property name="dataSource" ref="dataSource"/>-->
    <!--</bean>-->


    <!--<tx:advice id="transaction" transaction-manager="transactionManager">-->
    <!--<tx:attributes>-->
    <!--<tx:method name="select*" read-only="true"/>-->
    <!--<tx:method name="find*" read-only="true"/>-->
    <!--<tx:method name="get*" read-only="true"/>-->
    <!--<tx:method name="query*" read-only="true"/>-->
    <!--<tx:method name="*"/>-->
    <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!--<aop:config>-->
    <!--<aop:pointcut id="transactionService"-->
    <!--expression="execution(* com.xlibao.saas.market.manager.service.*..*Service*.*(..))"/>-->
    <!--<aop:advisor advice-ref="transaction" pointcut-ref="transactionService"/>-->
    <!--</aop:config>-->
</beans>