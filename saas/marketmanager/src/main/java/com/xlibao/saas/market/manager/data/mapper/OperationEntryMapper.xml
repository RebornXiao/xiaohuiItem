<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xlibao.saas.market.manager.data.mapper.OperationEntryMapper">
    <resultMap id="BaseResultMap" type="com.xlibao.saas.market.manager.data.model.OperationEntry">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="father_id" property="fatherId" jdbcType="BIGINT"/>
        <result column="operation_key" property="operationKey" jdbcType="VARCHAR"/>
        <result column="operation_value" property="operationValue" jdbcType="VARCHAR"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
        <result column="explains" property="explain" jdbcType="VARCHAR"/>
        <result column="is_delete" property="isDelete" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="searchOperations" resultMap="BaseResultMap">
        select * from operation where is_delete = 1 order by create_time desc limit #{pageStartIndex}, #{pageSize}
    </select>

    <select id="operationCount" resultType="int">
        select count(*) from operation where is_delete = 1
    </select>

    <select id="searchOperationById" resultMap="BaseResultMap">
        select * from operation where id = #{id}
    </select>

    <insert id="createOperation" useGeneratedKeys="true" keyProperty="id" parameterType="com.xlibao.saas.market.manager.data.model.OperationEntry">
        insert into operation(father_id, operation_key, operation_value, url, explains, is_delete, create_time, update_time)
        values(#{fatherId}, #{operationKey}, #{operationValue}, #{url}, #{explain}, #{isDelete}, #{createTime}, #{updateTime})
    </insert>

    <update id="updateOperation" parameterType="com.xlibao.saas.market.manager.data.model.OperationEntry">
        update operation set father_id = #{fatherId}, operation_key = #{operationKey}, operation_value = #{operationValue},
         url = #{url}, explains = #{explain}, is_delete = #{isDelete}, update_time = #{updateTime} where id = #{id}
    </update>

    <update id="operationDel" parameterType="com.xlibao.saas.market.manager.data.model.OperationEntry">
        update operation set is_delete = #{isDelete}, update_time = #{updateTime} where id = #{id}
    </update>


</mapper>