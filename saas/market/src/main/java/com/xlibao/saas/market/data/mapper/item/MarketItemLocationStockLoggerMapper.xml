<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xlibao.saas.market.data.mapper.item.MarketItemLocationStockLoggerMapper">
    <resultMap id="BaseResultMap" type="com.xlibao.market.data.model.MarketItemLocationStockLogger">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="item_id" property="itemId" jdbcType="BIGINT"/>
        <result column="location_code" property="locationCode" jdbcType="VARCHAR"/>
        <result column="offset_stock" property="offsetStock" jdbcType="INTEGER"/>
        <result column="before_stock" property="beforeStock" jdbcType="INTEGER"/>
        <result column="after_stock" property="afterStock" jdbcType="INTEGER"/>
        <result column="operator_passport_id" property="operatorPassportId" jdbcType="BIGINT"/>
        <result column="operator_passport_name" property="operatorPassportName" jdbcType="VARCHAR"/>
        <result column="operation_type" property="operationType" jdbcType="INTEGER"/>
        <result column="operation_time" property="operationTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <insert id="createLocationStockLogger">
        insert into market_item_location_stock_logger(item_id, location_code, offset_stock, before_stock, after_stock, operator_passport_id, operator_passport_name, operation_type, operation_time)
        values(#{itemId}, #{locationCode}, #{offsetStock}, #{beforeStock}, #{afterStock}, #{operatorPassportId}, #{operatorPassportName}, #{operationType}, #{operationTime})
    </insert>
</mapper>